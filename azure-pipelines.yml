trigger:
  branches:
    include:
    - master
    - refs/tags/*

variables:
    dist_dir: .tox/dist
    publish_repo: wb-artifacts
    python_version: 3.6
    PIPENV_CACHE_DIR: $(Pipeline.Workspace)/.pipenvcache

stages:
  - stage: CommitTest
    displayName: CI Commit Test
    jobs:
      - job: 
        pool:
            vmImage: 'ubuntu-16.04'
        steps:
          - task: CacheBeta@0
            displayName: Tox cache
            inputs:
              key: |
                pipenv
                $(Agent.OS)
                $(Build.SourcesDirectory)/Pipfile.lock
              path: $(PIPENV_CACHE_DIR)
            
          - task: UsePythonVersion@0
            displayName: Set Python version to $(python_version)
            inputs:
                versionSpec: "$(python_version)"

          - task: CmdLine@2
            displayName: Prepare virtualenv
            inputs:
                script: make init

          - task: CmdLine@2
            displayName: Run tests
            inputs:
                script: make pre-commit

          - task: PublishTestResults@2
            displayName: Publish tests
            condition: succeededOrFailed()
            inputs:
                testResultsFiles: "junit/test-*.xml"
                testRunTitle: "Publish test results for Python $(python.version)"

          - task: PublishPipelineArtifact@1
            inputs:
                path: $(dist_dir)
                artifact: dist

  - stage: Publish
    displayName: Publish
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    jobs:
      - job: Publish        
        steps:
          - checkout: none

          - task: DownloadPipelineArtifact@2
            inputs:
                artifact: dist

          - task: UsePythonVersion@0
            displayName: Set Python version to $(python_version)
            inputs:
                versionSpec: "$(python_version)"

          - task: CmdLine@2
            displayName: Prepare virtualenv
            inputs:
                script: make init

          - task: TwineAuthenticate@0
            displayName: Authenticate with $(publish_repo) repo
            inputs:
                artifactFeeds: $(publish_repo)

          - task: CmdLine@2
            displayName: Publish to $(publish_repo)
            inputs:
                script: pipenv run twine upload -r $(publish_repo) --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/dist/*.zip